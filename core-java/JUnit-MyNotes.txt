Unit testing
->

Test fixture
-> A test fixture is a context where a Test Case runs. Typically, test fixtures include:
   - Objects or resources that are available for any test case.
   - Activities required that makes these objects/resources available.
   - These activities are
      - allocation (setup)
      - de-allocation (teardown).
	  
Setup & Tear down
-> 

Annotations
->
@Test
@Test(timeout=500)
@Test(expected=IllegalArgumentException.class)
@Before
@After
@BeforeClass
@AfterClass
@Ignores
@RunWith
@SuiteClasses
@Suite.SuiteClasses
@Rule

Assert methods
-> assertEquals, assertTrue, assertFalse, assertNull, assertNotNull, assertSame, assertNotSame, fail

TestCase, TestResult, TestSuite *** Are these in latest version?
->

Assert
-> Assert is a class which provides a bunch of assertion methods useful in determining Pass or Fail status of a test case

Error Collector
-> With JUnit error collector, you can still continue with the test execution even after an issue is found or test fails. Error collector collects all error objects and reports it only once after the test execution is over. The benefit of adding all errors in an Error Collector is that you can verify all the errors at once. Also, if the script fails in the middle, it can still continue executing it.

 

	  