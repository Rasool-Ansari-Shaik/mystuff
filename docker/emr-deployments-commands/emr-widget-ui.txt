1) Check Java installed
$ java -version

2) Check Docker installed
$ docker -v

3) Check Git installed
$ git --version

4) Check Maven installed
$ export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64/
$ mvn --version

5) Copy "emr-widget-ui-service" from windows VDI to Linux VRA using WinSCP

6) Go to "emr-widget-ui-service" folder in Putty
$ cd /home/c-pwmc/deployments/emr/sprint2/20191202/emr-widget-ui-service

7) Build the application using maven
$ mvn clean install -DskipTests=true

8) Check Cloudctl installed
$ /usr/local/bin/cloudctl login -a https://10.231.186.12:8443 --skip-ssl-validation
$ /usr/local/bin/cloudctl api

9) Check Kubectl installed
/usr/local/bin/kubectl config set-cluster phyteldev --server=https://10.231.186.12:8001 --insecure-skip-tls-verify=true
/usr/local/bin/kubectl config set-context phyteldev-context --cluster=phyteldev
/usr/local/bin/kubectl config set-credentials admin --token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdF9oYXNoIjoiZjllYzUyMzFmM2QxMWM0M2ZiZWExMjQ2YWZiZjIxYjdjZWJlZDQ2OSIsInJlYWxtTmFtZSI6ImN1c3RvbVJlYWxtIiwidW5pcXVlU2VjdXJpdHlOYW1lIjoiYWRtaW4iLCJpc3MiOiJodHRwczovLzEyNy4wLjAuMTo4NDQzL2lkYXV0aC9vaWRjL2VuZHBvaW50L09QIiwiYXVkIjoiODEzYjUwOWYxMzVjNGYxNTE5NzJmZmU1YWI3MzZmZTIiLCJleHAiOjE1NzU0MjcxNTUsImlhdCI6MTU3NTQyNzE1NSwic3ViIjoiYWRtaW4iLCJ0ZWFtUm9sZU1hcHBpbmdzIjpbXX0.QymIIte-b1abDwkHGi9vmEId9RFScTT-5WCgSivmsKhRrwsvyfjWjGSpYqCeTilzbxEppj-zRIhOyAY2ohKreZ_VZlabNS5SWhp1Q8SdaL59nDz9bRIjL6Dr-D8Z9jdbznl0MnTzFAYWoCnfVYYylbI6gM_j3ny0bdMMMi2DB4mtPIWFl1UvyFBznX1w0IVtzxtolc45K9UK_rrhppKeaHKElbQNtgm8xTS32lJMvvT1ma6sVcTe-lVpVRn29QIhC8QjpQizPcgGR1B8Q5ZPcKfQTjygvn80RTSJDsQiev1DNztodJzO9WVJdZCw1NWye2e4B0jsoKD6jJI7WvaEOw
/usr/local/bin/kubectl config set-context phyteldev-context --user=admin --namespace=hydra-dev
/usr/local/bin/kubectl config use-context phyteldev-context

change namespace to "hydra-dev"

/usr/local/bin/kubectl cluster-info

10) Docker login to ICP
$ docker login phyteldev.icp:8500

11) Build docker image for "demo-test"
$ cd /home/c-pwmc/deployments/emr/sprint2/20191202/emr-widget-ui-service
$ docker build -t emr-widget-ui:dev2.1 .

12) Check image created or not
$ docker images

13) Tag application image
$ docker tag emr-widget-ui:dev2.3 phyteldev.icp:8500/hydra-dev/emr-widget-ui:dev2.3

14) Push image to ICP
$ docker push phyteldev.icp:8500/hydra-dev/emr-widget-ui:dev2.3

15) Check the image available in ICP. Click on "Container Images". "emr-widget-data" should be available in ICP.

16) Deploy "emr-widget-data" using helm
$ cd /home/c-pwmc/deployments/emr/sprint2/20191202/emr-widget-data-service
$ /usr/local/bin/helm install --name emr-widget-ui-dev2.1 --namespace hydra-dev emr-widget-ui-chart

*** Helm didnot work due to TLS issue. When I tried it was throwing error "No TLS creds found".
*** So I have used kubectl command to deploy into ICP
$ /usr/local/bin/kubectl apply -f client-service-deployment.yaml
For this, I have created "client-service-deployment.yaml" file in workspace. 

8) To check the logs
$ /usr/local/bin/kubectl logs --follow <pod_name>
/usr/local/bin/kubectl logs --follow patient-demographics-846c5cb765-fhm6c

----------------------

17) To see all list of helm deployments
$ /usr/local/bin/helm ls

18) To delete helm deployment
$ /usr/local/bin/helm del --purge patient-demographics-dev2.1

19) Kubectl commands to delete the deployments that are deployed thru kubectl
$ /usr/local/bin/kubectl get all
$ /usr/local/bin/kubectl delete deployment.apps/emr-widget-ui
$ /usr/local/bin/kubectl delete service/emr-widget-ui
$ /usr/local/bin/kubectl get all

20) Delete the images
$ docker rmi -f <IMAGE-ID>
docker rmi -f 252d823b706a

21) Run docker image
$ docker run <IMAGE-ID>
docker run 252d823b706a


http://10.229.170.7:30193/emrwidget/data/apollo/NGEN?patientId=EA1DF448-5044-4B87-86C6-45987C7E7F57